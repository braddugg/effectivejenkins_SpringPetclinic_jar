pipeline {
    agent { label 'master' }
    stages {
        stage ('Checkout') {
          steps {
            git 'https://github.com/cbabu85/effectivejenkins_SpringPetclinic.git'
          }
        }
        stage('Code Analysis') {
         def scannerHome = tool 'SonarQube Scanner';
         withSonarQubeEnv('Sonar 8.3.1') {
         bat "${scannerHome}/bin/sonar-scanner -Dsonar.host.url=http://34.126.89.141:9000 -Dsonar.login=cb4e2ac86c60200796a7cf866c2a60955a505db2 -Dsonar.projectVersion=1.0 -Dsonar.projectKey=PetClinic_Key -Dsonar.sources=src -Dsonar.java.binaries=."
          }
     } 
        
        stage('Build') {
            agent { docker 'maven:3.5-alpine' }
            steps {
                sh 'mvn clean package'
                junit '**/target/surefire-reports/TEST-*.xml'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
   //     stage('Deploy') {
 //         steps {
   //         input 'Do you approve the deployment?'
  //          sh 'scp target/*.jar jenkins@10.148.0.2:/opt/pet/'
   //         sh "ssh jenkins@10.148.0.2 'nohup java -jar /opt/pet/spring-petclinic-1.5.1.jar &'"
   //       }
   //     }
    }
}
