pipeline {
    agent { label 'master' }
    stages {
        stage ('Checkout') {
          steps {
            git 'https://github.com/cbabu85/effectivejenkins_SpringPetclinic.git'
          }
        }
    //   stage('Sonarqube analysis') {
  //  steps {
  //      script {
    //        scannerHome = tool 'sonarscanner';
    //    }
   //     withSonarQubeEnv('sonarqube') {
  //          bat "${scannerHome}/bin/sonar-scanner.bat" 
   //     }
 //   }
//}
stage('Code Quality') {
                   steps {
                       script {
                          def scannerHome = tool 'sonarscanner';
                          withSonarQubeEnv("sonarqube") {
                          sh "${tool("sonarscanner")}/bin/sonar-scanner"
                                       }
                               }
                           }
                        }
        
        stage('Build') {
            agent { docker 'maven:3.5-alpine' }
            steps {
                sh 'mvn clean package'
                junit '**/target/surefire-reports/TEST-*.xml'
          //    cobertura coberturaReportFile: '**/cobertura-coverage.xml'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
        
          
       stage('Deploy') {
          steps {
            input 'Do you approve the deployment?'
            sh 'scp -v target/*.jar jenkins@34.126.68.160:/opt/pet'
            sh "ssh jenkins@34.126.68.160 'nohup java -jar /opt/pet/spring-petclinic-1.5.1.jar &'"
          }
        }
    }
}
